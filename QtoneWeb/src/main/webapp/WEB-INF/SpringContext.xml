<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd " >

	<!-- 注释配置 -->
	<context:annotation-config />
	<context:component-scan	base-package="cn.qtone" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>

	</bean>
	<bean id="customObjectMapper" class="cn.qtone.util.tools.CustomObjectMapper"></bean> 
	 
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<!-- <value>text/html;charset=UTF-8</value> -->
				<value>application/json;charset=utf-8</value>
			</list>
		</property>
		<!-- 				    处理返回json的时间格式 -->
		<property name="objectMapper" ref="customObjectMapper"></property> 
	</bean>

	
    <!--   **************************** 为velocity,freemarker提供jsp:include功能  多个拦截器,顺序执行 ************************-->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >
        <property name="interceptors">  
           <list>  
              <ref bean="ShareRenderArgsVariableInterceptor"/>  
           </list>  
        </property>  	
	</bean> 	
    <bean id="ShareRenderArgsVariableInterceptor" class="cn.qtone.util.common.ShareRenderArgsVariableInterceptor">   
    </bean> 

		<!--  ***************************数据连接池********************************************************* -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
<!-- 		destroy-method="cl ose"> -->
<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
    init-method="init" destroy-method="close">
	<property name="driverClassName" value="com.mysql.jdbc.Driver" />



<!-- 本地测试数据库 -->
	<property name="url" value="jdbc:mysql://192.168.0.39:3306/qt_test" />
	<property name="username" value="ggp_test" />
	<property name="password" value="ggp_test" />
	

    <property name="maxWait"            value="1000" />
    <property name="initialSize"        value="20" />
    <property name="maxActive"          value="50" />
    <property name="maxIdle"            value="20" />
    <property name="testWhileIdle"      value="true" />
    <property name="timeBetweenEvictionRunsMillis"  value="15000" />
    <property name="numTestsPerEvictionRun"         value="20" />
    <property name="validationQuery"    value="SELECT 1 FROM DUAL" />
    <property name="removeAbandoned"    value="true" />
    <property name="removeAbandonedTimeout"         value="180" />
	</bean>

	<!-- 进行事务控制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="nestedTransactionAllowed" value="true" /> <property 
			name="validateExistingTransaction" value="true" /> -->
	</bean>


	<!-- enable transaction demarcation with annotations -->
	<!-- <tx:annotation-driven /> -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!--Session工厂类的配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="/WEB-INF/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
<!-- 				<value>classpath:lzserj/dao/mapper/*.xml</value> -->
				<value>classpath:cn/qtone/business/map/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- 自动加载对应的 数据访问层接口类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.qtone.business" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>


</beans> 